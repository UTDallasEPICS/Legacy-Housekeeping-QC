generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin {
  admin_id String @id @default(uuid())
  userId   String

  @@index([userId], map: "Admin_userId_fkey")
}

model Leader {
  leader_id String @id @default(uuid())
  userId    String

  @@index([userId], map: "Leader_userId_fkey")
}

model RoomReport {
  team_member_id String
  room_id        String
  date           DateTime @default(now())
  cleaned        Boolean  @default(false)
  comments       String?

  @@id([team_member_id, room_id])
  @@index([room_id], map: "RoomReport_room_id_fkey")
}

model Items {
  item_id        String @id @default(uuid())
  item           String
  restroom_id    String
  ancillary_id   String
  independent_id String
  assisted_id    String
  skilled_id     String
  memory_id      String

  @@index([ancillary_id], map: "Items_ancillary_id_fkey")
  @@index([assisted_id], map: "Items_assisted_id_fkey")
  @@index([independent_id], map: "Items_independent_id_fkey")
  @@index([memory_id], map: "Items_memory_id_fkey")
  @@index([restroom_id], map: "Items_restroom_id_fkey")
  @@index([skilled_id], map: "Items_skilled_id_fkey")
}

model Restrooms {
  restroom_id String @id @default(uuid())
  room_id     String

  @@index([room_id], map: "Restrooms_room_id_fkey")
}

model Ancillary_Areas {
  ancillary_id String @id @default(uuid())
}

model Independent_Living {
  independent_id String @id @default(uuid())
}

model Assisted_Living {
  assisted_id String @id @default(uuid())
}

model Skilled {
  skilled_id String @id @default(uuid())
}

model Memory {
  memory_id String @id @default(uuid())
}

model points {
  points_id      String   @id
  points         Int      @default(0)
  time_stamp     DateTime @default(now())
  team_member_id String

  @@index([team_member_id], map: "Points_team_member_id_fkey")
}

model room {
  room_id         String  @id
  room_number     String
  building_number Int
  is_clean        Boolean
  is_active       Boolean
  type_of_room    String
}

model teammembers {
  member_id    String @id
  first_name   String
  last_name    String
  email        String
  address_line String
  city         String
  country_code String
  phone_number String
  state        String
  state_code   String
  zipcode      String
  total_points Int    @default(0)
}

model user {
  user_id      String    @id
  first_name   String
  last_name    String
  email        String    @unique(map: "User_email_key")
  phone_number String
  country_code String
  state_code   String
  password     String
  role         user_role @default(USER)
}

enum user_role {
  USER
  ADMIN
}
